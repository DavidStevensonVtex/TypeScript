// Listing 4.13 Defining a static method in the index.js file in the primer folder

class Product {
    constructor (name, price) {
        this.name = name ;
        this.price = price;
    }

    toString() {
        return `toString: Name: ${this.name}, Price: ${this.price}` ;
    }
}

class TaxedProduct extends Product {
    constructor ( name, price, taxRate = 1.2 ) {
        super(name, price);
        this.taxRate = taxRate ;
    }

    getPriceIncTax() {
        return Number(this.price) * this.taxRate;
    }

    toString() {
        let chainResult = super.toString();
        return `${chainResult}, Tax: ${this.getPriceIncTax()}`;
    }

    static process(...products) {
        products.forEach(p => console.log(p.toString()));
    }
}

TaxedProduct.process( new TaxedProduct("Hat", 100, 1.2), new TaxedProduct("Boots", 100));

// Output
// toString: Name: Hat, Price: 100, Tax: 120
// toString: Name: Boots, Price: 100, Tax: 120